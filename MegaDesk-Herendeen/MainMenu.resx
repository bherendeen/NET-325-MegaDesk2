<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>